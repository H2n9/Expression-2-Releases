@name Perlin
@inputs 
@outputs 
@persist F2 G2 F3 G3 GRAD3:array Permutation:array Period
@trigger 

F2 = 0.5 * (sqrt(3.0) - 1.0)
G2 = (3.0 - sqrt(3.0)) / 6.0
F3 = 1.0 / 3.0
G3 = 1.0 / 6.0
    
GRAD3 = array(vec(1,1,0),vec(-1,1,0),vec(1,-1,0),vec(-1,-1,0), 
	vec(1,0,1),vec(-1,0,1),vec(1,0,-1),vec(-1,0,-1), 
	vec(0,1,1),vec(0,-1,1),vec(0,1,-1),vec(0,-1,-1),
	vec(1,1,0),vec(0,-1,1),vec(-1,1,0),vec(0,-1,-1)) 

Permutation = array(151,160,137,91,90,15, 
		131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23, 
		190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33, 
		88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166, 
		77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244, 
		102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196, 
		135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123, 
		5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42, 
		223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9, 
		129,22,39,253,9,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228, 
		251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107, 
		49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254, 
		138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180)
    Period = Permutation:count()

function number perlinNoise2(X, Y) {
    local Noise = 0 
    local S = (X+Y) * F2
    local I = floor(X+S)
    local J = floor(Y+S)
    local T = (I+J) * G2
    local XP = X - (I-T)
    local YP = Y - (J-T)
    
    if(XP > YP) {
        IP = 1
        JP = 0
    } else {
        IP = 0
        JP = 1
    }
    local XP1 = XP - IP + G2
    local YP1 = YP - JP + G2
    local XP2 = XP + G2 * 2.0 - 1.0
    local YP2 = YP + G2 * 2.0 - 1.0
    
    local II = I % Period
    local JJ = J % Period
    local GI0 = (Permutation[II+(Permutation[JJ+1,number])+1, number]+1) % 12
    local GI1 = (Permutation[II+IP+(Permutation[JJ+JP+1,number])+1,number]+1) % 12
    local GI2 = (Permutation[II+1+(Permutation[JJ+1+1,number])+1, number]+1) % 12
    
    local TT = 0.5 - X^2 - Y^2
    if(TT > 0) {
        G = GRAD3[GI0+1,vector]
        Noise += TT^4 * (G:y() * X + G:x() * Y)
    }
    TT = 0.5 - XP1^2 - YP1^2
    if(TT > 0) {
        G = GRAD3[GI1+1,vector]
        Noise += TT^4 * (G:x() * XP1 + G:y() * YP1)
    }
    TT = 0.5 - XP2^2 - YP2^2
    if(TT > 0) {
        G = GRAD3[GI2+1,vector]
        Noise += TT^4 * (G:x() * XP2 + G:y() * YP2)
    }
    return Noise*100
}
